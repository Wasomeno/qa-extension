version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: qa-postgres
    environment:
      POSTGRES_DB: qa_command_center
      POSTGRES_USER: qa_user
      POSTGRES_PASSWORD: qa_password
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - qa-network

  redis:
    image: redis:7-alpine
    container_name: qa-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - qa-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qa-backend
    env_file:
      - ./.env
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://qa_user:qa_password@postgres:5432/qa_command_center
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_here
      PORT: 3000
      # OpenAI (fallbacks to values from .env via env_file)
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4.1-mini}
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - qa-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  qa-network:
    driver: bridge
