# QA Command Center Backend Environment Configuration
# Copy this file to .env and update the values as needed

# Server Configuration
NODE_ENV=development
PORT=3000
CORS_ORIGIN=http://localhost:3000,chrome-extension://*

# Database Configuration (PostgreSQL)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=qa_command_center
DB_USER=qa_user
DB_PASSWORD=qa_password

# Redis Configuration
REDIS_URL=redis://localhost:6379

# JWT Configuration
# CRITICAL: Generate a secure secret for production!
# You can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d

# OpenAI Configuration (Optional - for AI features)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini

# GitLab Integration (Optional)
# Create OAuth app at: https://gitlab.com/-/profile/applications
GITLAB_CLIENT_ID=your-gitlab-client-id
GITLAB_CLIENT_SECRET=your-gitlab-client-secret
GITLAB_REDIRECT_URI=http://localhost:3000/api/auth/gitlab/callback

# Slack Integration (Optional)
# Create Slack app at: https://api.slack.com/apps
SLACK_CLIENT_ID=your-slack-client-id
SLACK_CLIENT_SECRET=your-slack-client-secret
SLACK_SIGNING_SECRET=your-slack-signing-secret

# Rate Limiting
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000

# File Upload
MAX_FILE_SIZE=10485760
UPLOAD_PATH=./uploads

# ===========================================
# IMPORTANT NOTES:
# ===========================================
# 
# REQUIRED FOR PRODUCTION:
# - JWT_SECRET (must be a secure random string)
# - DB_PASSWORD (should not use default value)
#
# OPTIONAL SERVICES:
# - OpenAI: Required for AI-powered issue generation
# - GitLab: Required for GitLab integration
# - Slack: Required for Slack notifications
#
# The application will work without optional services,
# but those features will be disabled.
#
# ===========================================